// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }


datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}



// owner User @relation("HouseOwner", fields: [ownerId], references: [id])
// 	ownerId String

model User {
  id Int @id @default(autoincrement())
  username String
  groups Group[]
  issues Issue[]   
  contributions Contribution[]
  loans      Loan[]
  score Int @default(0)
  active Boolean @default(true)       
}

model Group {
  id Int @id @default(autoincrement())
  name String
  size Int
  leaderId Int
  // members User[] @relation(fields: [memberId], references: [id]) Sqlite limitation
  members User @relation(fields: [memberId], references: [id])
  memberId Int
  contributions Contribution[]
  loans   Loan[]
  createdAt DateTime  @default(prisma.datetime.utcNow())
  status GroupStatus @default(ACTIVE)
}

enum GroupStatus {
  ACTIVE
  DISSOLVED
}

model Contribution {
  id Int @id @default(autoincrement())
  amount Int
  user User @relation(fields: [userId], references: [id])
  userId Int
  group   Group   @relation(fields: [groupId], references: [id])
  groupId Int
}

model Loan {
  id Int @id @default(autoincrement())
  amount Float
  group      Group   @relation(fields: [groupId], references: [id])
  groupId Int
  borrower   User    @relation(fields: [borrowerId], references: [id])
  borrowerId Int
  repaidAmount Int  @default(0)
  dueDate DateTime
  interestRate Float?
  status LoanStatus @default(PENDING)
}

enum LoanStatus {
  PENDING
  APPROVED
  REJECTED
  REPAID
  DEFAULTED
}

model Issue {
  id  Int   @id @default(autoincrement())
  description String
  user  User  @relation(fields: [userId], references: [id])
  userId   Int
}